import math
import tkinter.messagebox

import textblob
import wikipedia
from tkinter import *
from tkinter import ttk, messagebox

# root
root = Tk()
root.title('Nic Cage Score Generator')
root.geometry("600x300")

global topic_menu
global key_word
key_word = "Nic Cage"
global string_intro_label
string_intro = "A '" + key_word + " score' is generated by calculating the number " + "of times you can spell '" + key_word + "' from the characters in the wikipedia page summary."
string_intro_label = Label(root, text=string_intro, font=("helvetica", 14), wraplength=550)
string_intro_label.grid(row=0, column=0, padx=5, pady=5)
# textbox for search
search_term = Text(root, height=1, width=20)
search_term.insert(1.0, "Nic cage")
search_term.place(relx=0.20, rely=0.59, anchor='sw')


# define function to search for wikipedia articles
def search():
    str_search_term = search_term.get(1.0, END)
    str_search_term = str_search_term.replace("\n", "")
    menu_box_results = wikipedia.search(str_search_term, results=5)
    global topic_menu
    topic_menu = ttk.Combobox(root, state="readonly", width=20, value=menu_box_results)
    topic_menu.current(0)
    topic_menu.place(relx=0.25, rely=0.695, anchor='sw')


# search button
topic_search = Button(root, text="Search Topic:", font=("helvetica", 8), command=search)
topic_search.place(relx=0.05, rely=0.6, anchor='sw')


def get_score():
    summary_text = wikipedia.WikipediaPage(topic_menu.get()).summary
    # convert summary to string
    summary_string = str(summary_text).lower()
    # convert key word/phrase to string in lower case without whitespace
    check_list = key_word.lower().strip()
    count_list = []
    for x in check_list:
        if check_list.count(x) == 1:
            count_list.append(summary_string.count(x))
        else:
            count_list.append(math.floor(summary_string.count(x) / check_list.count(x)))
    count_list.sort()
    tkinter.messagebox.showinfo(master=None, message="Score is: " + str(count_list[0]))
    print(count_list[0])


# textbox for score key
score_text = Text(root, height=1, width=20)
score_text.insert(1.0, "Nic cage")
score_text.place(relx=0.68, rely=0.59, anchor='sw')


# change key word
def change_key():
    global key_word
    key_word = score_text.get(1.0, END)
    key_word = key_word.replace("\n", "")
    global string_intro_label
    new_label = "A '" + key_word + " score' is generated by calculating the number " + "of times you can spell '" + key_word + "' from the characters in the wikipedia page summary."
    string_intro_label.config(text=new_label)
    get_cage_score.config(text="Get " + key_word + " Score:")




wiki_label = Label(root, text="Select Wiki Page:", font=("helvetica", 10), wraplength=550)
wiki_label.place(relx=0.05, rely=0.7, anchor='sw')

# get score button
global get_cage_score
get_cage_score = Button(root, text="Get " + key_word + " Score", font=("helvetica", 8), command=get_score)
get_cage_score.place(relx=0.05, rely=0.8, anchor='sw')

# change score key
change_score_key = Button(root, text="Change score key:", font=("helvetica", 8), command=change_key)
change_score_key.place(relx=0.5, rely=0.6, anchor='sw')

search()
root.mainloop()
